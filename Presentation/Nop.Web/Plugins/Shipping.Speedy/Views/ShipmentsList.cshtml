@using Nop.Plugin.Shipping.Speedy.Domain
@using Nop.Plugin.Shipping.Speedy.Models
@using Nop.Web.Areas.Admin.Models.Discounts
@using Nop.Web.Framework.Models.DataTables
@model Nop.Plugin.Shipping.Speedy.Models.SpeedyShipmentsSearchModel

@{
    Layout = "_AdminLayout";

    //page title
    ViewBag.Title = T("Speedy.ShipmentsList.SpeedyShippingTitle").ToString();
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("SpeedyShipments");
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Speydy.ShipmentsList")
    </h1>
    <div class="pull-right">
        <button type="button" id="requersForCourierBtn" class="btn bg-blue">
            <i class="fa fa-truck"></i>
            @T("Speedy.ShipmentsList.RequestForCourier")
        </button>

    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            @*hide the entire search block if no elements are displayed*@
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="BarCode" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="BarCode" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="OrderId" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="OrderId" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="CustomerName" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="CustomerName" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="DateCreated" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="DateCreated" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-shipments" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="dialog-confirm" title="@T("Speedy.ShipmentsList.CancelBolConfirmTitle")">
                        <p>
                            <span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>@T("Speedy.ShipmentsList.CancelBolConfirmMessage")
                        </p>
                        <p>
                            <textarea style="width: 100%;" rows="5"></textarea>
                        </p>
                    </div>
                    <div id="dialog-error" style="display: none;" title="@T("Speedy.ShipmentsList.ErrorOperationTitle")">
                        <p>
                            <span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>@T("Speedy.ShipmentsList.ErrorOperationMessage")
                        </p>
                    </div>
                    <div id="dialog-courier-picking" title="@T("Speedy.ShipmentsList.CourierPickingConfirmTitle")">
                        <p>
                            <span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>@T("Speedy.ShipmentsList.CourierPickingConfirmMessage")
                        </p>
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-md-12">

                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <label class="control-label" for="DatePick">@T("Speedy.ShipmentsList.CourierPickingDate")</label>
                                        </div>
                                        <div class="col-md-8">
                                            <input id="DatePick" name="DatePick" value="@DateTime.Now.Date" data-min="@DateTime.Now.Date">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <label class="control-label" for="ContactName">@T("Speedy.ShipmentsList.CourierPickingContactName")</label>
                                        </div>
                                        <div class="col-md-8">
                                            <input class="form-control text-box single-line" id="ContactName" name="ContactName" type="text" value="">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <label class="control-label" for="ContactName">@T("Speedy.ShipmentsList.CourierPickingPhoneNumber")</label>
                                        </div>
                                        <div class="col-md-8">
                                            <input class="form-control text-box single-line" id="PhoneNumber" name="PhoneNumber" type="text" value="">
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel-body">
                        @{
                            var gridModel = new DataTablesModel
                            {
                                Name = "shipments-grid",
                                UrlRead = new DataUrl(Url.RouteUrl("Plugin.Shipping.Speedy.ShipmentsList")),
                                SearchButtonId = "search-shipments",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,
                                Filters = new List<FilterParameter>
                                                        {
                                                            new FilterParameter(nameof(Model.BarCode)),
                                                            new FilterParameter(nameof(Model.CustomerName)),
                                                            new FilterParameter(nameof(Model.DateCreated)),
                                                            new FilterParameter(nameof(Model.OrderId))
                                                        },
                                ColumnCollection = new List<ColumnProperty>
                                                    {
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.Id))
                                                        {
                                                            IsMasterCheckBox = true,
                                                            Render = new RenderCheckBox("checkbox_shipments"),
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                            Width = "50",
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.Id))
                                                        {
                                                            Title = "Id",
                                                            Width = "50",
                                                            ClassName = NopColumnClassDefaults.CenterAll
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.BarCode))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.BarCode").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                            Render = new RenderCustom("renderBarLink")
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.OrderId))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.OrderId").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                            Render = new RenderLink(new DataUrl("~/Admin/Order/Edit", nameof(SpeedyShipmentModel.OrderId)))
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.ShippingCostText))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.ShippingCost").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.CodComissionText))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.CodComission").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.IsFreeShipping))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.IsFreeShipping").Text,
                                                            Render = new RenderBoolean(),
                                                            ClassName = NopColumnClassDefaults.CenterAll
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.DateCreated))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.DateCreated").Text,
                                                            Width = "180",
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                            Render = new RenderDate()
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.BolCreatingStatusText))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.BolCreatingStatus").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.CustomerName))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.CustomerName").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.CourierStatusText))
                                                        {
                                                            Title = T("Speedy.ShipmentsList.CourierStatus").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                        },
                                                        new ColumnProperty(nameof(SpeedyShipmentModel.Id))
                                                        {
                                                            Title = T("Admin.Common.Edit").Text,
                                                            ClassName = NopColumnClassDefaults.CenterAll,
                                                            Render = new RenderCustom("renderButtons")
                                                        }
                                                    }
                            };
                        }
                        @await Html.PartialAsync("Table", gridModel)
                    </div>
                    <script>

                        function renderBarLink(data, type, row, meta) {
                            return row.BarCode==null ? "" : '<a href="https://www.speedy.bg/bg/track-shipment?shipmentNumber=' + row.BarCode + '" target="_blank">' + row.BarCode +'</a>';
                        }

                        function renderButtons(data, type, row, meta) {
                            var result = "";
                            if (row.BolCreatingStatus != '@((int)BolCreatingStatus.Cancelled)') {
                                result += '[<a href="javascript:void(0)" class="js_cancelBtn" data-id="' + row.Id + '">@T("Speedy.ShipmentsList.Cancel")</a>]';
                            }
                            if (row.CourierStatus == '@((int) CourierStatus.NotRequested)' &&
                                row.BolCreatingStatus == '@((int) BolCreatingStatus.BolIsCreated)') {
                                result += '[<a href="javascript:void(0)" class="js_requestCourierBtn" data-id="' +
                                    row.Id +
                                    '">@T("Speedy.ShipmentsList.RequestForCourier")</a>]';
                            }
                            if (row.BarCode != null) {
                                result += '[<a target="_blank" href="/Plugins/SpeedyShipping/CreatePdf?barCode=' + row.BarCode + '">PDF</a>]';
                                }
                            return result;
                        }

                        var shippingIdForCancel = -1;
                        var selectedIds = [];
                        var datePick = "";


                        $('#mastercheckbox').click(function() {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#shipments-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function(e) {
                            var $check = $(this);
                            var checked = jQuery.inArray($check.val(), selectedIds);
                            if ($check.is(":checked") == true) {
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push(parseInt($check.val()));
                                }
                            } else if (checked > -1) {
                                //remove id from selectedIds.
                                selectedIds = $.grep(selectedIds, function (item, index) {
                                    return item != $check.val();
                                });
                            }
                            console.log("selectedIds", selectedIds);
                        });

                        var dialog=$("#dialog-confirm").dialog({
                            autoOpen:false,
                            resizable: false,
                            height: "auto",
                            width: 600,
                            modal: true,
                            buttons: {
                                "@T("Speedy.ShipmentsList.Cancel")": function () {
                                    $.ajax({
                                        url: "@Html.Raw(Url.RouteUrl("Plugin.Shipping.Speedy.CancelShipping"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: function() {
                                            var data = {
                                                shipmentId: shippingIdForCancel,
                                                message: $("#dialog-confirm").find("textarea").val()
                                            };
                                            addAntiForgeryToken(data);
                                            return data;
                                        }(),
                                        success: function () {
                                            updateTable('#shipments-grid');
                                            dialog.dialog("close");
                                        }
                                    }).fail(function () {
                                        $("#dialog-error").dialog({
                                            modal: true,
                                            autoOpen: true,
                                            buttons: {
                                                Ok: function () {
                                                    $(this).dialog("close");
                                                }
                                            }
                                        });
                                    });
                                },
                                "@T("Speedy.ShipmentsList.CloseBtnText")": function() {
                                    $( this ).dialog( "close" );
                                }
                            }
                        });

                        var dialogCourierPicking = $("#dialog-courier-picking").dialog({
                            autoOpen:false,
                            resizable: false,
                            height: "auto",
                            width: 600,
                            modal: true,
                            buttons: {
                                "@T("Speedy.ShipmentsList.CancelBtnText")": function () {
                                    $.ajax({
                                        url: "@Html.Raw(Url.RouteUrl("Plugin.Shipping.Speedy.CourierPicking"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: function() {
                                            var data = {
                                                shipmentIds: selectedIds,
                                                datePick,
                                                contactName: $("#dialog-courier-picking").find("input#ContactName").val(),
                                                phoneNumber: $("#dialog-courier-picking").find("input#PhoneNumber").val()
                                            };
                                            addAntiForgeryToken(data);
                                            return data;
                                        }(),
                                        success: function () {
                                            updateTable('#shipments-grid');
                                            dialogCourierPicking.dialog("close");
                                        }

                                    }).fail(function() {
                                        $( "#dialog-error" ).dialog({
                                            modal: true,
                                            autoOpen:true,
                                            buttons: {
                                                Ok: function() {
                                                    $( this ).dialog( "close" );
                                                }
                                            }
                                        });
                                    });
                                },
                                "@T("Speedy.ShipmentsList.CloseBtnText")": function() {
                                    $( this ).dialog( "close" );
                                }
                            }
                        });

                        $("#DatePick").kendoDatePicker({
                            change: function () {
                                var dateFormatted = kendo.toString(this.value(), 'yyyy-MM-dd');

                                datePick = dateFormatted;
                                console.log("Change :: " + dateFormatted);
                            },
                            min: new Date()
                        });

                        $("#shipments-grid").on("click", ".js_cancelBtn", function () {
                            shippingIdForCancel = $(this).data("id");
                            dialog.dialog("open");
                        });

                        $("#shipments-grid").on("click", ".js_requestCourierBtn", function () {
                            var shippingId = $(this).data("id");
                            selectedIds=[shippingId];
                            dialogCourierPicking.dialog("open");
                        });
                        $("#requersForCourierBtn").on("click",  function () {
                            dialogCourierPicking.dialog("open");
                        });
                    </script>

                </div>
            </div>
        </div>
    </div>
</div>
